//: [Previous](@previous)
/*
 
### Переменные и константы
1. Создайте переменную для хранения вашего роста и измените её значение.
2. Создайте константу для хранения числа π.

### Типы данных
1. Объявите переменные для хранения вашего имени, возраста и роста.
2. Создайте константы с названиями дней недели.

### Аннотация типов и её отсутствие
1. Объявите переменную с явным указанием типа.
2. Объявите переменную без явного указания типа.

### Приведение типов
1. Преобразуйте `Double` в `Int`.
2. Преобразуйте `Int` в строку.

### Названия переменных
1. Создайте переменную с именем, состоящим из нескольких слов.
2. Создайте переменную с именем, использующим символы подчеркивания.
3. Создайте переменную с именем, использующим цифры.

### Печать (print)
1. Выведите строку с вашим именем и возрастом.
2. Выведите результаты математических операций.

### Комментарии
1. Добавьте однострочный комментарий к коду.
2. Добавьте многострочный комментарий.

### Точки с запятой
1. Напишите две инструкции в одной строке, разделив их точкой с запятой.
2. Напишите инструкцию без точки с запятой.

### Арифметические операторы
1. Вычислите площадь прямоугольника.
2. Найдите среднее арифметическое трех чисел.

### Логические операторы
1. Проверьте, является ли число четным.
2. Проверьте, что две строки равны.

### Опциональные типы
1. Распакуйте опциональное значение с проверкой `if let`.
2. Используйте `guard` для распаковки опционала.

### Кортежи
1. Создайте кортеж для хранения информации о студенте (имя, возраст, средний балл).
2. Распакуйте кортеж в переменные.

### Псевдонимы типов (typealias)
1. Создайте псевдоним для `Int`.
2. Создайте псевдоним для кортежа, представляющего координаты точки.

 */

//: [Next](@next)
